<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shorten URL</title>
   <script src="https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js"></script>

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles/shorten.css" />

  </head>
  <body>
    <div class="logo">
      <img src="/images/4shortwhite.png" class="logo" alt="4SHORT" srcset="" />
    </div>
    <main>
      <div class="background">
        <div class="shape shape1"></div>
        <div class="shape shape2"></div>
        <div class="shape shape3"></div>
        <div class="shape shape4"></div>
      </div>
      {{#if shortUrl}}
        <div class="alert alert-success mt-3" role="alert">
          Your short URL is:
          <a href="{{shortUrl}}" target="_blank">{{shortUrl}}</a>
        </div>
      {{/if}}

      <form action="/shorten-url" id="shortenForm" method="POST" class="mt-3">
        <div class="form-group">
          <label class="Enter_url" for="originalUrl">Enter your URL:</label>
          <input
            type="url"
            placeholder="Enter the link to be short"
            name="originalUrl"
            id="originalUrl"
            class="form-control"
            required
          />
        </div>
        <button type="submit" class="btn btn-primary">Shorten URL</button>
      </form>
      <!-- History table -->
    <table id="historyTable">
      <thead>
        <tr>
          <th>Original URL</th>
          <th>Shortened URL</th>
          <th>Clicks</th>
          <th>QR Code</th>
          <th>Download QR</th>
          <!-- Add more headers if needed -->
        </tr>
      </thead>
      <tbody>
        <!-- Render history table rows dynamically using server-side data -->
        {{#each urlHistory}}
        <tr>
          <td>{{this.originalUrl}}</td>
          <td>{{this.shortUrl}}</td>
          <td>{{this.clicks}}</td>
            <td>
      <!-- Display QR code -->
      <canvas class="qr-code" data-url="{{this.shortUrl}}"></canvas>
    </td>
    <td>
      <!-- Download QR code button -->
      <button class="download-btn" data-url="{{this.shortUrl}}">Download QR</button>
    </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
</main>
<script src="../qrCodeGenerator.ts"></script>
 <script>
document.addEventListener('DOMContentLoaded', () => {
    // Function to generate and display QR code
    function generateQRCode(url, qrCodeElement) {
        // Generate QR code using a QR code library (e.g., qrcode.js)
        qrcode.toCanvas(qrCodeElement, url);
    }

    // Event listener for form submission
    document.getElementById('shortenForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        
        const form = event.target;
        const originalUrl = form.elements.originalUrl.value;

        try {
            const response = await fetch('/shorten-url', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ originalUrl })
            });
            const data = await response.json();

            // Display an alert with the shortened URL
            alert('Shortened URL: ' + data.shortUrl);

            // Add the shortened URL to the history table
            const tableBody = document.querySelector('#historyTable tbody');
            const newRow = tableBody.insertRow();
            newRow.innerHTML = `
                <td>${originalUrl}</td>
                <td>${data.shortUrl}</td>
                <td>0</td>
                <td><canvas class="qr-code" data-url="${data.shortUrl}"></canvas></td>
                <td><button class="download-btn" data-url="${data.shortUrl}">Download</button></td>
            `;

            // Generate QR code for the shortened URL
            const qrCodeCanvas = newRow.querySelector('.qr-code');
            generateQRCode(data.shortUrl, qrCodeCanvas);
        } catch (error) {
            console.error(error);
            alert('An error occurred. Please try again.');
        }
    });

    // Function to download QR code
    function downloadQRCode(qrCodeCanvas, filename) {
        // Convert canvas to blob
        qrCodeCanvas.toBlob(blob => {
            // Create a temporary link element
            const link = document.createElement('a');
            link.download = filename;
            link.href = URL.createObjectURL(blob);

            // Trigger the download
            link.click();

            // Clean up
            URL.revokeObjectURL(link.href);
        });
    }

    // Event listener for download QR code button
    document.querySelectorAll('.download-btn').forEach(button => {
        button.addEventListener('click', () => {
            const shortUrl = button.dataset.url;
            const qrCodeCanvas = button.parentElement.previousElementSibling.querySelector('.qr-code');
            downloadQRCode(qrCodeCanvas, 'qr_code.png');
        });
    });
});

</script>

  </body>
</html>